package kr.komec.admin.config;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import kr.komec.admin.domain.entity.AdminManager;
import kr.komec.admin.repository.AdminManagerRepository;

@Service("customUserDetailsService")
public class CustomUserDetailsService implements UserDetailsService {

	@Autowired
	private AdminManagerRepository adminRepository;
	
	@Transactional
	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		
		List<AdminManager> admins = adminRepository.findByUserId(username);
		AdminManager user = null;
		if (admins != null && admins.size() > 0) {
			user = admins.get(0);
		} else {
			throw new UsernameNotFoundException(username);
		}
		
		List<GrantedAuthority> authorities = new ArrayList<GrantedAuthority>(0);
		authorities.add(new SimpleGrantedAuthority("Admin"));
		
		return buildUserForAuthentication(user, authorities);
	}
	
	private User buildUserForAuthentication(AdminManager user, List<GrantedAuthority> authorities) {
		
		return new User(user.getUserId(), user.getPassword(),
				true, true, true, true, authorities);
	}
}
